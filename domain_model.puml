@startuml

package tweet <<core-domain>> {
    class Tweet  <<Root>> {
        - id : int
        - content : String
        --
        + {static} tweet(content : String) : Tweet
    }
    class DeletableTweet {
        # addRelatedTweet(tweet : RelatedTweet) : DeletableTweet
        + delete() : void
    }
    interface RelatedTweet {
        --
        + delete() : void
    }
    class Retweet {
        + {static} reTweet(content : String, src : DeletableTweet) : Tuple<Retweet, DeletableTweet>
    }
    class Reply {
        + {static} replay(content : String, to : To, src : Option<DeletableTweet>) : Tuple<Reply, DeletableTweet>
    }
    interface To

    Tweet <|-- DeletableTweet
    RelatedTweet <|.. Reply
    RelatedTweet <|.. Retweet
    DeletableTweet <|-- Reply
    DeletableTweet <|-- Retweet
    Retweet "0..1" o-- "1" Tweet
    Reply "0..1" o-- "1" Tweet
    DeletableTweet "1" *-- "0..*" RelatedTweet

    Reply "1" o-- "1" To
}



package user {
    class User <<Root>>
    class LoginUser {
        --
        getFollowingUsers() : List<FollowingUser>
    }

    User <|-- LoginUser

    class FollowingUser
    User "1" *-- "0..*" FollowingUser
}

User "1" *-- "0..*" Tweet : post
To <|.. User

package timeline {
    class TimeLine <<Root>> {
        --
        + {static} create(loginUser : LoginUser, followings : List<FollowingUser>) : TimeLine
    }
}

TimeLine "1" o-- "0..*" Tweet
TimeLine --> LoginUser
TimeLine --> FollowingUser




@enduml
