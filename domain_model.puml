
@startuml

package tweet <<core-domain>> {
    class "Tweet <<Root>>"  as TW {
        - id : Id
        - content : Content
        --
        + {static} tweet(content : Content) : Tweet
    }

    class "Retweet" as RT {
        + {static} reTweet(content : Content, src : Tweet) : Retweet
    }

    class "Reply" as RP {
        + {static} replay(content : Content, to : To, src : Option<Tweet>) : Reply
    }

    interface "To" as TO
    interface "Owner" as OWN

    TW <|-- RP
    TW <|-- RT
    TW "1" *-- "1" OWN
    RT "0..1" o-- "1" TW
    RP "0..1" o-- "1" TW
    RP "1" o-- "1" TO

    package deletable {
        class "Tweet" as DTW {
            id : int
            --
            delete() : List<DeletedId>
        }
        class "Reply" as DRP
        class "Retweet" as DRT

        DTW <|-- DRP
        DTW <|-- DRT
        DTW "1" *-- "0..*" DTW
    }

    interface "TweetRepository" as TREP {
        --
        find(owner : Owner) : List<Tweet>
        findDeletable(id : Id) :deletable.Tweet
        add(tweet : Tweet) : void
        deleteAll(ids : List<DeletedId>) : void
    }
}

package user {
    class "User <<Root>>" as U {
        id : Id
    }
    class "LoginUser" as LU {
        --
        getFollowingUsers() : List<FollowingUser>
        addFollowingUser(user : FollowingUser) : LoginUser
    }
    class "FollowingUser" as FU
    class "Id" as UID
    U <|-- LU
    U <|-- FU
    U "1" *-- "1" UID
    LU "1" *-- "0..*" FU
}

U "1" *-- "0..*" TW : post
TO <|.. UID
OWN <|.. UID

package timeline {
    class "TimeLine <<Root>>" as TL {
        --
        + {static} create(loginUser : LoginUser) : TimeLine
    }
}

TL "1" o-- "0..*" TW
TL --> LU
TL --> FU

@enduml
